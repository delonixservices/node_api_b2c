version: '3.8'

services:
  app:
    build: .
    ports:
      - "3334:3334"
    environment:
      - NODE_ENV=production
      - PORT=3334
      - HOST=0.0.0.0
      - DB_CONNECTION_STRING=mongodb://mongo:27017/b2capi
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - HOTEL_APIURL=${HOTEL_APIURL}
      - HOTEL_APIAUTH=${HOTEL_APIAUTH}
      - FLIGHT_APIURL=${FLIGHT_APIURL}
      - SMS_AUTH_KEY=${SMS_AUTH_KEY}
      - MERCHANT_ID=${MERCHANT_ID}
      - ACCESS_CODE=${ACCESS_CODE}
      - WORKING_KEY=${WORKING_KEY}
      - PAYMENT_URL=${PAYMENT_URL}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - CLIENT_HOST=${CLIENT_HOST}
      - CLIENT_PORT=${CLIENT_PORT}
      - PROTOCOL=${PROTOCOL}
      - APP_HOST=${APP_HOST}
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - b2c-network
    volumes:
      - ./logs:/app/logs
      - ./public/uploads:/app/public/uploads
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3334/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=b2capi
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - b2c-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - b2c-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - b2c-network

volumes:
  mongo_data:
  redis_data:

networks:
  b2c-network:
    driver: bridge 